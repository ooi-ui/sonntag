<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Table Checklist</title>
    <style>
        body {
            background: #f4f5fa;
            font-family: 'Segoe UI', Arial, sans-serif;
            margin: 0;
            padding: 0;
        }
        .container {
            max-width: 900px;
            margin: 30px auto;
            background: #fff;
            border-radius: 16px;
            box-shadow: 0 5px 32px rgba(0,0,0,0.08);
            padding: 32px 36px 36px;
        }
        .header {
            text-align: center;
            margin-bottom: 32px;
        }
        .header h1 {
            margin: 0;
            font-size: 2.1em;
            color: #245ed8;
        }
        .header p {
            color: #444;
            font-size: 1.15em;
            margin-top: 10px;
        }
        .table-container {
            margin-top: 16px;
        }
        .add-item-section {
            display: flex;
            gap: 16px;
            margin-bottom: 16px;
            align-items: center;
        }
        .add-item-input {
            flex: 1;
            padding: 9px 15px;
            border-radius: 6px;
            border: 1px solid #cdd3e3;
            font-size: 1em;
        }
        .add-btn {
            background: #245ed8;
            color: #fff;
            border: none;
            border-radius: 6px;
            padding: 10px 20px;
            font-size: 1em;
            cursor: pointer;
            transition: background 0.18s;
        }
        .add-btn:hover {
            background: #1745a2;
        }
        .progress-bar {
            height: 17px;
            background: #e6e9f4;
            border-radius: 8px;
            margin-bottom: 10px;
            overflow: hidden;
            width: 100%;
        }
        .progress-fill {
            height: 100%;
            background: linear-gradient(90deg, #245ed8 60%, #49d3e8);
            border-radius: 8px;
            width: 0;
            transition: width 0.3s;
        }
        .progress-text {
            text-align: right;
            color: #666;
            font-size: 0.96em;
            margin-bottom: 7px;
        }
        .checklist-table {
            width: 100%;
            border-collapse: separate;
            border-spacing: 0;
            background: #fff;
            border-radius: 10px;
            overflow: hidden;
            box-shadow: 0 2px 12px rgba(36,94,216,0.03);
        }
        .checklist-table th, .checklist-table td {
            padding: 11px 13px;
            text-align: left;
        }
        .checklist-table th {
            background: #f7f9fd;
            color: #245ed8;
            font-weight: 600;
            border-bottom: 1.5px solid #e4e9f4;
        }
        .checklist-table tr {
            transition: background 0.16s;
        }
        .checklist-table tr.completed {
            background: #eaf6e8;
        }
        .checkbox {
            width: 22px;
            height: 22px;
            border-radius: 6px;
            border: 2px solid #cdd3e3;
            background: #fff;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: border 0.16s, background 0.16s;
        }
        .checkbox.checked {
            background: #49d3e8;
            border-color: #245ed8;
        }
        .checkbox.checked::after {
            content: '✔';
            color: #fff;
            font-size: 1.2em;
        }
        .task-text {
            min-width: 110px;
            padding: 4px 7px;
            border-radius: 4px;
            outline: none;
            background: #f2f4fa;
            font-size: 1em;
            transition: background 0.11s;
        }
        .task-text:focus {
            background: #e6e9f4;
        }
        .name-input {
            width: 120px;
            padding: 6px 9px;
            border-radius: 5px;
            border: 1px solid #d4d8e6;
            font-size: 1em;
        }
        .comment-textarea {
            width: 96%;
            min-height: 35px;
            border-radius: 5px;
            border: 1px solid #d4d8e6;
            padding: 6px 8px;
            font-size: 0.99em;
            resize: vertical;
        }
        .delete-btn {
            background: #f15c5c;
            color: #fff;
            border: none;
            border-radius: 5px;
            padding: 6px 13px;
            font-size: 1.08em;
            cursor: pointer;
            transition: background 0.18s;
        }
        .delete-btn:hover {
            background: #c0392b;
        }
        @media (max-width: 650px) {
            .container {
                padding: 18px 6px;
            }
            .checklist-table th, .checklist-table td {
                padding: 9px 7px;
            }
            .add-item-section {
                flex-direction: column;
                gap: 6px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>Neue Idee für AutoCAD tools</h1>
            <p>Mach deine Arbeit bei der Planzeichnung viel einfacher als zuvor!</p>
        </div>
        
        <div class="table-container">
            <div class="add-item-section">
                <input type="text" class="add-item-input" placeholder="Add a new task..." id="newTaskInput">
                <button class="add-btn" onclick="addNewTask()">Add Task</button>
            </div>

            <div class="progress-bar">
                <div class="progress-fill" id="progressFill"></div>
            </div>
            <div class="progress-text" id="progressText">0 of 0 tasks completed</div>

            <table class="checklist-table">
                <thead>
                    <tr>
                        <th>Done</th>
                        <th>Task</th>
                        <th>Name</th>
                        <th>Comments & Notes</th>
                        <th>Delete</th>
                    </tr>
                </thead>
                <tbody id="checklistTableBody">
                    <!-- Default sample row -->
                    <tr>
                        <td>
                            <div class="checkbox" onclick="toggleCheck(this)"></div>
                        </td>
                        <td>
                            <div class="task-text" contenteditable="true">Review project proposal</div>
                        </td>
                        <td>
                            <input type="text" class="name-input" placeholder="Your name...">
                        </td>
                        <td>
                            <textarea class="comment-textarea" placeholder="Add your comments, notes, or details here..."></textarea>
                        </td>
                        <td>
                            <button class="delete-btn" onclick="deleteTask(this)">×</button>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>

    <!-- Firebase SDKs -->
    <script src="https://www.gstatic.com/firebasejs/9.22.1/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.22.1/firebase-firestore.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.22.1/firebase-analytics.js"></script>

    <script>
        // Your Firebase config
        const firebaseConfig = {
            apiKey: "AIzaSyCWjLnxfJLaIDCjKHyi1Iw4y8eKpQ-lDsg",
            authDomain: "autocad-idea.firebaseapp.com",
            projectId: "autocad-idea",
            storageBucket: "autocad-idea.firebasestorage.app",
            messagingSenderId: "258031635278",
            appId: "1:258031635278:web:1433c6d966f41858292c1f",
            measurementId: "G-03ES6SRJ80"
        };

        // Initialize Firebase
        const app = firebase.initializeApp(firebaseConfig);
        const analytics = firebase.analytics ? firebase.analytics(app) : null;
        const db = firebase.firestore();

        async function saveData() {
            const rows = document.querySelectorAll('#checklistTableBody tr');
            const tasks = [];

            rows.forEach(row => {
                const checkbox = row.querySelector('.checkbox');
                const taskText = row.querySelector('.task-text').textContent;
                const name = row.querySelector('.name-input').value;
                const comment = row.querySelector('.comment-textarea').value;
                const completed = checkbox.classList.contains('checked');

                tasks.push({
                    text: taskText,
                    name: name,
                    comment: comment,
                    completed: completed
                });
            });

            try {
                await db.collection("checklist").doc("main").set({ tasks: tasks });
                console.log("Data saved to Firestore");
            } catch (error) {
                console.error("Error saving data: ", error);
            }
        }

        async function loadData() {
            try {
                const docSnap = await db.collection("checklist").doc("main").get();
                if (docSnap.exists) {
                    const tasks = docSnap.data().tasks;
                    const tableBody = document.getElementById('checklistTableBody');
                    tableBody.innerHTML = '';

                    tasks.forEach(task => {
                        const newRow = document.createElement('tr');
                        newRow.innerHTML = `
                            <td>
                                <div class="checkbox ${task.completed ? 'checked' : ''}" onclick="toggleCheck(this)"></div>
                            </td>
                            <td>
                                <div class="task-text" contenteditable="true">${task.text}</div>
                            </td>
                            <td>
                                <input type="text" class="name-input" placeholder="Your name..." value="${task.name || ''}">
                            </td>
                            <td>
                                <textarea class="comment-textarea" placeholder="Add your comments, notes, or details here...">${task.comment}</textarea>
                            </td>
                            <td>
                                <button class="delete-btn" onclick="deleteTask(this)">×</button>
                            </td>
                        `;
                        if (task.completed) {
                            newRow.classList.add('completed');
                        }
                        tableBody.appendChild(newRow);
                    });

                    updateProgress();
                }
            } catch (error) {
                console.error("Error loading data: ", error);
            }
        }

        function toggleCheck(checkbox) {
            checkbox.classList.toggle('checked');
            const row = checkbox.closest('tr');
            row.classList.toggle('completed');
            updateProgress();
            saveData();
        }

        function addNewTask() {
            const input = document.getElementById('newTaskInput');
            const taskText = input.value.trim();

            if (taskText === '') {
                alert('Please enter a task description');
                return;
            }

            const tableBody = document.getElementById('checklistTableBody');
            const newRow = document.createElement('tr');
            newRow.innerHTML = `
                <td>
                    <div class="checkbox" onclick="toggleCheck(this)"></div>
                </td>
                <td>
                    <div class="task-text" contenteditable="true">${taskText}</div>
                </td>
                <td>
                    <input type="text" class="name-input" placeholder="Your name...">
                </td>
                <td>
                    <textarea class="comment-textarea" placeholder="Add your comments, notes, or details here..."></textarea>
                </td>
                <td>
                    <button class="delete-btn" onclick="deleteTask(this)">×</button>
                </td>
            `;
            tableBody.appendChild(newRow);
            input.value = '';
            updateProgress();
            saveData();
        }

        function deleteTask(button) {
            const row = button.closest('tr');
            row.remove();
            updateProgress();
            saveData();
        }

        function updateProgress() {
            const rows = document.querySelectorAll('#checklistTableBody tr');
            const completedRows = document.querySelectorAll('#checklistTableBody tr.completed');
            const total = rows.length;
            const completed = completedRows.length;
            const percentage = total > 0 ? (completed / total) * 100 : 0;

            document.getElementById('progressFill').style.width = percentage + '%';
            document.getElementById('progressText').textContent = `${completed} of ${total} tasks completed`;
        }

        document.addEventListener('input', function(e) {
            if (e.target.classList.contains('task-text') || e.target.classList.contains('comment-textarea') || e.target.classList.contains('name-input')) {
                saveData();
            }
        });

        document.getElementById('newTaskInput').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                addNewTask();
            }
        });

        window.addEventListener('load', function() {
            loadData();
        });
    </script>
</body>
</html>
